#!/usr/bin/env bash

snakefile=$(katuali_datafile Snakefile)
config=$(katuali_datafile config.yaml)
cluster_config=$(katuali_datafile cluster_config.yaml)


log_dir=logs
config_dir=configs

silent=false
args="--restart-times 3 --keep-going"
config_opts=""
cluster_opt=""
cluster_parm=""

autocluster_opt="--latency-wait 300 --drmaa"
# space is needed at start of autocluster_parm, 
# see https://snakemake.readthedocs.io/en/stable/executable.html?highlight=DRMAA#cluster-execution
#autocluster_parm=" -cwd -l {params.sge} -o $log_dir -j y" 
autocluster_parm=" {cluster.export_env} {cluster.cwd} {cluster.n_gpu}{resources.gpu} {cluster.n_cpu}{threads} {cluster.logdir}$log_dir {cluster.misc}"


export DRMAA_LIBRARY_PATH=${SGE_ROOT}/lib/lx-amd64/libdrmaa.so

for i in "$@"; 
do
    case "${1-}" in
        -s)
            snakefile="${2-}"
            shift 2
            ;;
        --snakefile)
            snakefile="${2-}"
            shift 2
            ;;
        --configfile)
            config="${2-}"
            shift 2
            ;;
        --cluster-config)
            cluster_config="${2-}"
            shift 2
            ;;
        --cluster*)
            cluster_opt="${1-}"
            cluster_parm="\"${2-}\""
            shift 2
            ;;
        --drmaa)
            cluster_opt="${1-}"
            cluster_parm="\"${2-}\""
            shift 2
            ;;
        --autocluster)
            cluster_opt=$autocluster_opt
            cluster_parm="\"$autocluster_parm\""
            shift 1
            ;;
        --config)
            shift 1
            while true; do
                if [[ ${1-} == *"="* ]]; then 
                    config_opts="$config_opts ${1-}";
                    shift 1;
                else
                    break
                fi
            done
            ;;
        -h)
            args="$args help"
            shift 1
            ;;
        --help)
            args="$args help"
            shift 1
            ;;
        --silent)
            silent=true
            shift 1
            ;;
        *)
            args="$args ${1-}"
            shift 1
            ;;
    esac
done

if [ -n "$cluster_opt" ]; then
    cluster_opt="--cluster-config $cluster_config $cluster_opt"
fi


mkdir -p $config_dir 

# make snakemake logs more visible by creating a symlink to the hidden
# .snakemake/log dir

if [[ ! -e ${log_dir} ]]; then
    ln -s .snakemake/log ${log_dir}
fi

t=$(date --rfc-3339=seconds | sed 's/ /_/')
configout="${config_dir}/katuali_${t}.yaml"

process_katuali_config $config $configout $config_opts

cmd="snakemake -s ${snakefile} --configfile $configout $args $cluster_opt $cluster_parm"

if $silent; then 
    echo $cmd | bash &> /dev/null
else
    echo "Running $cmd"
    echo "Config saved to $configout"
    echo $cmd | bash 
fi
